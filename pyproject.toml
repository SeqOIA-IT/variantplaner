[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[project]
name = "variantplaner"
description = "A tool kit to manage many variant on desktop computer"
authors = [{name = "Pierre Marijon", email = "pierre.marijon-ext@aphp.fr"}]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.9"
keywords = []
dynamic = ["version"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Documentation",
    "Topic :: Software Development",
    "Topic :: Utilities",
    "Typing :: Typed",
]
dependencies = [
    "polars[pyarrow]>=0.19",
    "click>=8.1.3",
    "typing-extensions>=4.5.0",
    "variantplaner-rs @ file:///${PROJECT_ROOT}/variantplaner_rs",
]

[project.urls]
Homepage = "https://natir.github.io/variantplaner"
Documentation = "https://natir.github.io/variantplaner"
Changelog = "https://natir.github.io/variantplaner/changelog"
Repository = "https://github.com/natir/variantplaner"
Issues = "https://github.com/natir/variantplaner/issues"

[project.scripts]
variantplaner = "variantplaner.cli:main"

[tool.pdm]
version = {source = "scm"}
plugins = [
    "pdm-multirun",
]

[tool.pdm.build]
package-dir = "src"
editable-backend = "editables"

[tool.pdm.dev-dependencies]
duty = ["duty>=0.10"]
#ci-quality = ["variantplaner[duty,docs,quality,typing,security]"]
#ci-tests = ["variantplaner[duty,tests]"]
docs = [
    "markdown-callouts>=0.3",
    "markdown-exec>=1.6",
    "mkdocs-coverage>=0.2",
    "mkdocs-gen-files>=0.5",
    "mkdocs-git-committers-plugin-2>=1",
    "mkdocs-literate-nav>=0.6",
    "mkdocs-material>=9",
    "mkdocs-minify-plugin>=0.6",
    "mkdocs-section-index>=0.3",
    "mkdocs>=1",
    "mkdocstrings[python]>=0.22",
    "ruff>=0.1",
    "toml>=0.10",
    "altair>=5",
]
maintain = [
    "blacken-docs>=1",
    "git-changelog>=2",
    "ruff>=0.1",
]
quality = [
    "ruff>=0.1",
]
tests = [
    "pytest-benchmark[histogram]>=4",
    "pytest-cov>=4",
    "pytest-randomly>=3",
    "pytest-xdist>=3",
    "pytest>=7",
]
typing = [
    "mypy>=1",
    "types-markdown>=3",
    "types-pyyaml>=6",
    "types-toml>=0.10",
]
security = [
    "safety>=2.3",
]
